[{"path":"https://causalinference.github.io/SEQuential/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 President Fellows Harvard College Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://causalinference.github.io/SEQuential/articles/ITT.html","id":"itt-with-20-bootstrap-samples","dir":"Articles","previous_headings":"","what":"ITT With 20 bootstrap samples","title":"Intention-To-Treat Analysis","text":"","code":"options <- SEQopts(# tells SEQuential to create kaplan meier curves                    km.curves = TRUE,                    # tells SEQuential to bootstrap                    bootstrap = TRUE,                    # tells SEQuential to run bootstraps 20 times                    bootstrap.nboot = 20)  # use example data data <- SEQdata                              model <- SEQuential(data, id.col = \"ID\",                            time.col = \"time\",                            eligible.col = \"eligible\",                            treatment.col = \"tx_init\",                            outcome.col = \"outcome\",                            time_varying.cols = c(\"N\", \"L\", \"P\"),                            fixed.cols = \"sex\",                           method = \"ITT\",                            options = options)  km.curve(model, plot.type = \"risk\")        # retrieve risk plot survival_data <- km.data(model)            # retrieve survival and risk data"},{"path":"https://causalinference.github.io/SEQuential/articles/ITT.html","id":"itt-with-20-bootstrap-samples-and-losses-to-followup","dir":"Articles","previous_headings":"","what":"ITT with 20 bootstrap samples and losses-to-followup","title":"Intention-To-Treat Analysis","text":"","code":"options <- SEQopts(km.curves = TRUE,                                   bootstrap = TRUE,                                    bootstrap.nboot = 20,                    # tells SEQuential to expect LTFU as the censoring column                    cense = \"LTFU\",                    # tells SEQuential to treat this column as the                     # censoring eligibility column                    cense.eligible = \"eligible.cense\")  # use example data for LTFU data <- SEQdata.LTFU model <- SEQuential(data, id.col = \"ID\",                            time.col = \"time\",                            eligible.col = \"eligible\",                            treatment.col = \"tx_init\",                            outcome.col = \"outcome\",                            time_varying.cols = c(\"N\", \"L\", \"P\"),                            fixed.cols = \"sex\",                           method = \"ITT\",                            options = options)  km.curve(model, plot.type = \"risk\") survival_data <- km.data(model)"},{"path":"https://causalinference.github.io/SEQuential/articles/ITT.html","id":"itt-with-20-bootstrap-samples-and-competing-events","dir":"Articles","previous_headings":"","what":"ITT with 20 bootstrap samples and competing events","title":"Intention-To-Treat Analysis","text":"","code":"options <- SEQopts(km.curves = TRUE,                                   bootstrap = TRUE,                                    bootstrap.nboot = 20,                    # Using LTFU as our competing event                    compevent = \"LTFU\")  data <- SEQdata.LTFU model <- SEQuential(data, id.col = \"ID\",                            time.col = \"time\",                            eligible.col = \"eligible\",                            treatment.col = \"tx_init\",                            outcome.col = \"outcome\",                            time_varying.cols = c(\"N\", \"L\", \"P\"),                            fixed.cols = \"sex\",                           method = \"ITT\",                            options = options)  km.curve(model, plot.type = \"risk\") survival_data <- km.data(model)"},{"path":"https://causalinference.github.io/SEQuential/articles/ITT.html","id":"itt-hazard-ratio-with-20-bootstrap-samples-and-competing-events","dir":"Articles","previous_headings":"","what":"ITT hazard ratio with 20 bootstrap samples and competing events","title":"Intention-To-Treat Analysis","text":"","code":"options <- SEQopts(# km.curves must be set to FALSE to turn on hazard                     # ratio creation                    km.curves = FALSE,                    # set hazard to TRUE for hazard ratio creation                    hazard = TRUE,                    bootstrap = TRUE,                                    bootstrap.nboot = 20,                         compevent = \"LTFU\")  data <- SEQdata.LTFU                           model <- SEQuential(data, id.col = \"ID\",                            time.col = \"time\",                            eligible.col = \"eligible\",                            treatment.col = \"tx_init\",                            outcome.col = \"outcome\",                            time_varying.cols = c(\"N\", \"L\", \"P\"),                            fixed.cols = \"sex\",                           method = \"ITT\",                            options = options)  # retrieve hazard ratios hazard(model)"},{"path":"https://causalinference.github.io/SEQuential/articles/ITT.html","id":"itt-with-20-bootstrap-samples-and-competing-events-in-subgroups-defined-by-sex","dir":"Articles","previous_headings":"","what":"ITT with 20 bootstrap samples and competing events in subgroups defined by sex","title":"Intention-To-Treat Analysis","text":"","code":"options <- SEQopts(km.curves = TRUE,                                   bootstrap = TRUE,                                    bootstrap.nboot = 20,                         compevent = \"LTFU\",                    # define the subgroup                    subgroup = \"sex\")  data <- SEQdata.LTFU model <- SEQuential(data, id.col = \"ID\",                            time.col = \"time\",                            eligible.col = \"eligible\",                            treatment.col = \"tx_init\",                            outcome.col = \"outcome\",                            time_varying.cols = c(\"N\", \"L\", \"P\"),                            fixed.cols = \"sex\",                           method = \"ITT\",                            options = options)  km.curve(model, plot.type = \"risk\") survival_data <- km.data(model)"},{"path":"https://causalinference.github.io/SEQuential/articles/SEQuential.html","id":"setting-up-your-analysis","dir":"Articles","previous_headings":"","what":"Setting up your Analysis","title":"Introduction to SEQuential","text":"flow SEQuential R package never changes, planned changes flow future.","code":""},{"path":"https://causalinference.github.io/SEQuential/articles/SEQuential.html","id":"step-1---defining-your-options","dir":"Articles","previous_headings":"Setting up your Analysis","what":"Step 1 - Defining your options","title":"Introduction to SEQuential","text":"R script, always start defining options object, SEQopts helper. many defaults allow target exactly like change analysis. wiki specific pages dedicated causal contrast parameters affect , simplicity let’s start intention--treat analysis 20 bootstrap samples. general, options form {option}.{parameter} - may notice use bootstrap.nboot indicating parameter affects bootstrap","code":"library(SEQuential)  options <- SEQopts(km.curves = TRUE, #asks the function to return survival and risk estimates                    bootstrap = TRUE, #asks the model to preform bootstrapping                    bootstrap.nboot = 10) #asks the model for 10 bootstrap samples"},{"path":"https://causalinference.github.io/SEQuential/articles/SEQuential.html","id":"step-2---running-the-primary-function","dir":"Articles","previous_headings":"Setting up your Analysis","what":"Step 2 - Running the Primary Function","title":"Introduction to SEQuential","text":"next step running primary R function, SEQuential. give options, data, data-level information. provide small simulated datasets test . SEQuential rather chunky algorithm take time run, especially bootstrapping. provide print statements help track function processing given point time.","code":"data <- SEQdata model <- SEQuential(data, id.col = \"ID\",                            time.col = \"time\",                            eligible.col = \"eligible\",                           treatment.col = \"tx_init\",                           outcome.col = \"outcome\",                           time_varying.cols = c(\"N\", \"L\", \"P\"),                           fixed.cols = \"sex\",                           method = \"ITT\", options = options) #> Expanding Data... #> Expansion Successful #> Moving forward with ITT analysis #> Bootstrapping with 80 % of data 10 times #> ITT model created successfully #> Creating Survival curves #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale. #> Completed"},{"path":"https://causalinference.github.io/SEQuential/articles/SEQuential.html","id":"step-3---recovering-your-results","dir":"Articles","previous_headings":"Setting up your Analysis","what":"Step 3 - Recovering your results","title":"Introduction to SEQuential","text":"SEQuential produces lot internal diagnostics, models, dataframes main function S4 class. provide different methods handle obtaining results.","code":"outcome(model)     # Returns a list of only the outcome models  #> [[1]] #> [[1]][[1]] #>  #> Call: #> fastglm.default(x = X, y = y, family = quasibinomial(), method = params@fastglm.method) #>  #> Coefficients: #>           (Intercept)          tx_init_bas1              followup  #>           -6.85931555            0.22530938            0.03538172  #>           followup_sq                 trial              trial_sq  #>           -0.00015987            0.04471790            0.00057617  #>                  sex1                 N_bas                 L_bas  #>            0.12704583            0.00328671           -0.01385088  #>                 P_bas tx_init_bas1:followup  #>            0.20092890           -0.00170402  #>  #> [[1]][[2]] #>  #> Call: #> fastglm.default(x = X, y = y, family = quasibinomial(), method = params@fastglm.method) #>  #> Coefficients: #>           (Intercept)          tx_init_bas1              followup  #>           -8.14674023            0.19226280            0.03965018  #>           followup_sq                 trial              trial_sq  #>           -0.00016679            0.07494722            0.00042395  #>                  sex1                 N_bas                 L_bas  #>           -0.01185998            0.00256276           -0.06020273  #>                 P_bas tx_init_bas1:followup  #>            0.34583760           -0.00201959  #>  #> [[1]][[3]] #>  #> Call: #> fastglm.default(x = X, y = y, family = quasibinomial(), method = params@fastglm.method) #>  #> Coefficients: #>           (Intercept)          tx_init_bas1              followup  #>           -9.68266422            0.25196123            0.02832709  #>           followup_sq                 trial              trial_sq  #>           -0.00021262            0.09954536            0.00021236  #>                  sex1                 N_bas                 L_bas  #>           -0.00614833            0.00098217           -0.09436828  #>                 P_bas tx_init_bas1:followup  #>            0.53220518            0.00100584  #>  #> [[1]][[4]] #>  #> Call: #> fastglm.default(x = X, y = y, family = quasibinomial(), method = params@fastglm.method) #>  #> Coefficients: #>           (Intercept)          tx_init_bas1              followup  #>           -1.4505e+01            4.0995e-02            4.0091e-02  #>           followup_sq                 trial              trial_sq  #>           -8.2607e-05            1.9664e-01           -3.1030e-04  #>                  sex1                 N_bas                 L_bas  #>           -1.0100e-01            3.3429e-04           -7.3433e-02  #>                 P_bas tx_init_bas1:followup  #>            9.9999e-01            5.6661e-03  #>  #> [[1]][[5]] #>  #> Call: #> fastglm.default(x = X, y = y, family = quasibinomial(), method = params@fastglm.method) #>  #> Coefficients: #>           (Intercept)          tx_init_bas1              followup  #>           -8.83548174            0.02688514            0.02850910  #>           followup_sq                 trial              trial_sq  #>           -0.00024471            0.09504621           -0.00014984  #>                  sex1                 N_bas                 L_bas  #>            0.13627464            0.00151311            0.02626678  #>                 P_bas tx_init_bas1:followup  #>            0.43655780           -0.00174669  #>  #> [[1]][[6]] #>  #> Call: #> fastglm.default(x = X, y = y, family = quasibinomial(), method = params@fastglm.method) #>  #> Coefficients: #>           (Intercept)          tx_init_bas1              followup  #>           -4.08687505            0.30694465            0.03700131  #>           followup_sq                 trial              trial_sq  #>           -0.00032609           -0.00657565            0.00089323  #>                  sex1                 N_bas                 L_bas  #>            0.12870566            0.00402671           -0.11084174  #>                 P_bas tx_init_bas1:followup  #>           -0.08513444           -0.00435722  #>  #> [[1]][[7]] #>  #> Call: #> fastglm.default(x = X, y = y, family = quasibinomial(), method = params@fastglm.method) #>  #> Coefficients: #>           (Intercept)          tx_init_bas1              followup  #>           -8.64511609            0.10589836            0.01912696  #>           followup_sq                 trial              trial_sq  #>           -0.00022359            0.07344020            0.00029895  #>                  sex1                 N_bas                 L_bas  #>            0.20712094            0.00545825            0.03800885  #>                 P_bas tx_init_bas1:followup  #>            0.42633397            0.00643044  #>  #> [[1]][[8]] #>  #> Call: #> fastglm.default(x = X, y = y, family = quasibinomial(), method = params@fastglm.method) #>  #> Coefficients: #>           (Intercept)          tx_init_bas1              followup  #>           -8.96315219            0.46116363            0.04809236  #>           followup_sq                 trial              trial_sq  #>           -0.00030492            0.07407228            0.00045074  #>                  sex1                 N_bas                 L_bas  #>            0.17904994            0.00582946            0.00133611  #>                 P_bas tx_init_bas1:followup  #>            0.37584210           -0.00692379  #>  #> [[1]][[9]] #>  #> Call: #> fastglm.default(x = X, y = y, family = quasibinomial(), method = params@fastglm.method) #>  #> Coefficients: #>           (Intercept)          tx_init_bas1              followup  #>           -4.68527791            0.39349369            0.03510229  #>           followup_sq                 trial              trial_sq  #>           -0.00035165           -0.00759481            0.00084357  #>                  sex1                 N_bas                 L_bas  #>           -0.00075082            0.00650330            0.05898252  #>                 P_bas tx_init_bas1:followup  #>           -0.00609746           -0.00613544  #>  #> [[1]][[10]] #>  #> Call: #> fastglm.default(x = X, y = y, family = quasibinomial(), method = params@fastglm.method) #>  #> Coefficients: #>           (Intercept)          tx_init_bas1              followup  #>            1.7540e+00            1.1570e-01            1.9745e-02  #>           followup_sq                 trial              trial_sq  #>            3.9629e-05           -1.1164e-01            1.6734e-03  #>                  sex1                 N_bas                 L_bas  #>           -9.1659e-02            1.7729e-03           -1.7534e-01  #>                 P_bas tx_init_bas1:followup  #>           -6.6998e-01            2.4396e-03  #>  #> [[1]][[11]] #>  #> Call: #> fastglm.default(x = X, y = y, family = quasibinomial(), method = params@fastglm.method) #>  #> Coefficients: #>           (Intercept)          tx_init_bas1              followup  #>           -1.2850e+01            3.2399e-01            3.8747e-02  #>           followup_sq                 trial              trial_sq  #>           -2.7788e-04            1.6451e-01           -4.5264e-04  #>                  sex1                 N_bas                 L_bas  #>           -1.1366e-02           -3.0130e-03            2.2202e-02  #>                 P_bas tx_init_bas1:followup  #>            8.6620e-01           -6.8907e-03 km.curve(model)    # Prints the survival curve #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale. #> [[1]] #> Warning: Removed 600 rows containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"https://causalinference.github.io/SEQuential/articles/censoring.html","id":"per-protocol-censoring-weights-in-pre-expanded-data-and-no-truncation-no-excused-conditions-i-e--static-interventions","dir":"Articles","previous_headings":"","what":"Per-protocol, censoring, weights in pre-expanded data and no truncation, no excused conditions (i.e. static interventions)","title":"Per-Protocol: Censoring Analysis","text":"","code":"options <- SEQopts(# tells SEQuential to create kaplan meier curves                    km.curves = TRUE,                    # tells SEQuential to weight the outcome model                    weighted = TRUE,                     # tells SEQuential to build weights from the pre-expanded data                    weight.preexpansion = TRUE)  # use some example data in the package data <- SEQdata                                 model <- SEQuential(data,                      time.col = \"time\",                     eligible.col = \"eligible\",                     treatment.col = \"tx_init\",                     outcome.col = \"outcome\",                     time_varying.cols = c(\"N\", \"L\", \"P\"),                     fixed.cols = \"sex\",                     method = \"censoring\",                     options = options)  # retrieve risk plot km.curve(model, plot.type = \"risk\") # retrieve survival and risk data survival_data <- km.data(model)"},{"path":"https://causalinference.github.io/SEQuential/articles/censoring.html","id":"per-protocol-censoring-weights-in-post-expanded-data-and-no-truncation-no-excused-conditions-i-e--static-interventions","dir":"Articles","previous_headings":"","what":"Per-protocol, censoring, weights in post-expanded data and no truncation, no excused conditions (i.e. static interventions)","title":"Per-Protocol: Censoring Analysis","text":"","code":"options <- SEQopts(km.curves = TRUE,                    weighted = TRUE,                     # tells SEQuential to build weights from the post-expanded data                    weight.preexpansion = FALSE)  data <- SEQdata                                  model <- SEQuential(data,                      time.col = \"time\",                     eligible.col = \"eligible\",                     treatment.col = \"tx_init\",                     outcome.col = \"outcome\",                     time_varying.cols = c(\"N\", \"L\", \"P\"),                     fixed.cols = \"sex\",                     method = \"censoring\",                     options = options)  km.curve(model, plot.type = \"risk\") survival_data <- km.data(model)"},{"path":"https://causalinference.github.io/SEQuential/articles/censoring.html","id":"per-protocol-censoring-weights-in-pre-expanded-data-and-no-truncation-excused-conditions-for-initiators-and-non-initiators-i-e--dynamic-interventions","dir":"Articles","previous_headings":"","what":"Per-protocol, censoring, weights in pre-expanded data and no truncation, excused conditions for initiators and non-initiators (i.e. dynamic interventions)","title":"Per-Protocol: Censoring Analysis","text":"","code":"options <- SEQopts(km.curves = TRUE,                    weighted = TRUE,                    weight.preexpansion = TRUE,                    # tells SEQuential to run a dynamic intervention                    excused = TRUE,                                                   # tells SEQuential to use columns excusedOne and                     # excusedZero as excused conditions for treatment switches                    excused.cols = c(\"excusedZero\", \"excusedOne\"),                     # tells SEQuential to expect treatment levels 0, 1                    # (mapping to the same positions as the list in excused.cols)                    treat.level = c(0, 1)) data <- SEQdata                                 model <- SEQuential(data,                      time.col = \"time\",                     eligible.col = \"eligible\",                     treatment.col = \"tx_init\",                     outcome.col = \"outcome\",                     time_varying.cols = c(\"N\", \"L\", \"P\"),                     fixed.cols = \"sex\",                     method = \"censoring\",                     options = options)  km.curve(model, plot.type = \"risk\") survival_data <- km.data(model)"},{"path":"https://causalinference.github.io/SEQuential/articles/censoring.html","id":"per-protocol-censoring-weights-in-post-expanded-data-and-no-truncation-excused-conditions-for-initiators-and-non-initiators-i-e--dynamic-interventions","dir":"Articles","previous_headings":"","what":"Per-protocol, censoring, weights in post-expanded data and no truncation, excused conditions for initiators and non-initiators (i.e. dynamic interventions)","title":"Per-Protocol: Censoring Analysis","text":"","code":"options <- SEQopts(km.curves = TRUE,                    weighted = TRUE,                    weight.preexpansion = FALSE,                    excused = TRUE,                                                   excused.cols = c(\"excusedZero\", \"excusedOne\"),                     treat.level = c(0, 1)) data <- SEQdata                                 model <- SEQuential(data,                      time.col = \"time\",                     eligible.col = \"eligible\",                     treatment.col = \"tx_init\",                     outcome.col = \"outcome\",                     time_varying.cols = c(\"N\", \"L\", \"P\"),                     fixed.cols = \"sex\",                     method = \"censoring\",                     options = options)  km.curve(model, plot.type = \"risk\") survival_data <- km.data(model)"},{"path":"https://causalinference.github.io/SEQuential/articles/censoring.html","id":"per-protocol-censoring-weights-in-post-expanded-data-and-no-truncation-excused-conditions-for-initiators-and-non-initiators-i-e--dynamic-interventions-and-a-competing-event","dir":"Articles","previous_headings":"","what":"Per-protocol, censoring, weights in post-expanded data and no truncation, excused conditions for initiators and non-initiators (i.e. dynamic interventions) and a competing event","title":"Per-Protocol: Censoring Analysis","text":"","code":"options <- SEQopts(km.curves = TRUE,                    weighted = TRUE,                    weight.preexpansion = FALSE,                    excused = TRUE,                                                   excused.cols = c(\"excusedZero\", \"excusedOne\"),                     treat.level = c(0, 1),                    # add a competing event                    compevent = \"LTFU\")  data <- SEQdata.LTFU                                 model <- SEQuential(data,                      id.col = \"ID\",                     time.col = \"time\",                     eligible.col = \"eligible\",                     treatment.col = \"tx_init\",                     outcome.col = \"outcome\",                     time_varying.cols = c(\"N\", \"L\", \"P\"),                     fixed.cols = \"sex\",                     method = \"censoring\",                     options = options)  km.curve(model, plot.type = \"risk\") survival_data <- km.data(model)"},{"path":"https://causalinference.github.io/SEQuential/articles/censoring.html","id":"per-protocol-censoring-weights-in-post-expanded-data-and-no-truncation-excused-conditions-for-initiators-and-non-initiators-i-e--dynamic-interventions-and-hazard-ratio","dir":"Articles","previous_headings":"","what":"Per-protocol, censoring, weights in post-expanded data and no truncation, excused conditions for initiators and non-initiators (i.e. dynamic interventions) and hazard ratio","title":"Per-Protocol: Censoring Analysis","text":"","code":"options <- SEQopts(# tell SEQuential to run hazard ratios                    hazard = TRUE,                    weighted = TRUE,                    weight.preexpansion = FALSE,                    excused = TRUE,                                                   excused.cols = c(\"excusedZero\", \"excusedOne\"))  data <- SEQdata                               model <- SEQuential(data,                     id.col = \"ID\",                     time.col = \"time\",                     eligible.col = \"eligible\",                     treatment.col = \"tx_init\",                     outcome.col = \"outcome\",                     time_varying.cols = c(\"N\", \"L\", \"P\"),                     fixed.cols = \"sex\",                     method = \"censoring\",                     options = options)"},{"path":"https://causalinference.github.io/SEQuential/articles/seqopts.html","id":"behind-seqopts","dir":"Articles","previous_headings":"","what":"Behind SEQopts()","title":"Defining your SEQopts()","text":"SEQopts() provides primary API changing internal options SEQuential(). documentation go use, expand greater detail:","code":""},{"path":[]},{"path":[]},{"path":"https://causalinference.github.io/SEQuential/articles/seqopts.html","id":"weighting-options","dir":"Articles","previous_headings":"Behind SEQopts() > The options","what":"Weighting Options","title":"Defining your SEQopts()","text":"general affect analytic methods ‘dose-response’ ‘censoring’. However, providing cense allow ITT weighted case censoring variable like loss--followup.","code":""},{"path":"https://causalinference.github.io/SEQuential/articles/seqopts.html","id":"plot-options-km-curves-true","dir":"Articles","previous_headings":"Behind SEQopts() > The options","what":"Plot Options (km.curves = TRUE)","title":"Defining your SEQopts()","text":"can changed SEQuential finished analysis - forget add , need stop restart. Additionally, SEQuential output data used plot like customize preferred plotting software.","code":""},{"path":"https://causalinference.github.io/SEQuential/articles/seqopts.html","id":"internal-options","dir":"Articles","previous_headings":"Behind SEQopts() > The options","what":"Internal Options","title":"Defining your SEQopts()","text":"internal options change output name covariates decomposition method estimating coefficients.","code":""},{"path":"https://causalinference.github.io/SEQuential/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryan O'Dea. Author, maintainer. Alejandro Szmulewicz. Author. Miguel Hernan. Author.","code":""},{"path":"https://causalinference.github.io/SEQuential/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"O'Dea R, Szmulewicz , Hernan M (2025). SEQuential: Sequential Trial Emulation. R package version 0.9.6, https://causalinference.github.io/SEQuential/.","code":"@Manual{,   title = {SEQuential: Sequential Trial Emulation},   author = {Ryan O'Dea and Alejandro Szmulewicz and Miguel Hernan},   year = {2025},   note = {R package version 0.9.6},   url = {https://causalinference.github.io/SEQuential/}, }"},{"path":"https://causalinference.github.io/SEQuential/index.html","id":"sequential","dir":"","previous_headings":"","what":"Sequential Trial Emulation","title":"Sequential Trial Emulation","text":"goal SEQuential implement sequential trial emulation analysis observational databases. SEQuential software accommodates time-varying treatments confounders, well binary failure time outcomes. SEQ allows compare static dynamic strategies, can used estimate observational analogs intention--treat per-protocol effects, can adjust potential selection bias induced losses--follow-.","code":""},{"path":"https://causalinference.github.io/SEQuential/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sequential Trial Emulation","text":"can install development version SEQuential GitHub :","code":"install.packages(\"devtools\") devtools::install_github(\"CausalInference/SEQuential\", subdir = \"SEQuential\")"},{"path":"https://causalinference.github.io/SEQuential/index.html","id":"setting-up-your-analysis","dir":"","previous_headings":"","what":"Setting up your Analysis","title":"Sequential Trial Emulation","text":"SEQuential uses R’s S4 object class system handle function input/output. user side, amounts calling helpful constructor SEQopts feeding SEQuential. SEQestimate can also take provided options return (rough) estimated time analysis.","code":"library(SEQuential) data <- SEQdata  model <- SEQuential(data, id.col = \"ID\", time.col = \"time\",                     eligible.col = \"eligible\", treatment.col = \"tx_init\",                      outcome.col = \"outcome\",                      time_varying.cols = c(\"N\", \"L\", \"P\"),                     fixed.cols = \"sex\",                     method = \"ITT\",                     options = SEQopts(km.curves = TRUE))  outcome(model)       # Returns a list of all outcome models as S3 fastglm objects over the course of bootstrapping diagnostics(model)  # Returns a table of non-excused treatment switches and both unique and non-unique outcomes  # Plotting km.curve(model)                      # Returns the Survival curve km.data(model)                      # Returns a dataframe of survival data in long-format for other analysis/plotting"},{"path":"https://causalinference.github.io/SEQuential/index.html","id":"assumptions","dir":"","previous_headings":"Setting up your Analysis","what":"Assumptions","title":"Sequential Trial Emulation","text":"package places several assumptions onto input data unexpected results errors may arrise followed- Provided time.col entries may order sort enforced beginning function, e.g. (0, 2, 1, 4, 3, …) valid begins 0 continuously increasing increments 1, even though ordered. eligible, excused.col1, excused.col0 one one (respect time.col) flag variables","code":""},{"path":"https://causalinference.github.io/SEQuential/index.html","id":"return","dir":"","previous_headings":"","what":"Return","title":"Sequential Trial Emulation","text":"primary function, SEQuential, returns S4 object class SEQoutput slots: params - SEQparams object created SEQuential process DT - Expanded data table weighting information outcome - outcome covariates numerator - numerator covariates weighting denominator - denominator covariates weighting hazard - hazard ratio survival.curve - ggplot survival curve survival.data - survival risk data points followup risk.difference - risk difference end followup CIs bootstrapped risk.ratio - risk ratio end followup CIs bootstrapped time - elapsed time SEQuential analysis can handily easily printed terminal calling object mySequential. shape output object, slots always filled, e.g. user providers hazard = TRUE, calculate.var = TRUE, survival curves, data, associated risks return NA.","code":""},{"path":"https://causalinference.github.io/SEQuential/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Sequential Trial Emulation","text":"data.table doFuture doRNG future future.apply ggplot2 fastglm methods stringr","code":""},{"path":"https://causalinference.github.io/SEQuential/index.html","id":"finding-more-information-and-examples","dir":"","previous_headings":"","what":"Finding More Information and Examples","title":"Sequential Trial Emulation","text":"information utilizing package developing available SEQuential Pages part repository. unable find solutions answers , please feel free open discussion.","code":""},{"path":"https://causalinference.github.io/SEQuential/index.html","id":"contributing-to-the-package","dir":"","previous_headings":"","what":"Contributing to the package","title":"Sequential Trial Emulation","text":"Community members welcome contribute package several different avenues- Asking/Answering questions package via Github Discussions. can questions analysis methods, future planned developments package, requests clarity package internals. Contributing Github Issues bug found. guided bug report help us resolve unintended pests quickly. Pass current unit-tests ensure nothing broken backwards. Add tests added portions code already covered existing tests Pass R-CMD-Check (initiated PR) 0-0-0 status","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQdata.LTFU.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Lost-to-followup example data for SEQuential — SEQdata.LTFU","title":"Simulated Lost-to-followup example data for SEQuential — SEQdata.LTFU","text":"Simulated Lost--followup example data SEQuential","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQdata.LTFU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Lost-to-followup example data for SEQuential — SEQdata.LTFU","text":"","code":"SEQdata.LTFU"},{"path":"https://causalinference.github.io/SEQuential/reference/SEQdata.LTFU.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Lost-to-followup example data for SEQuential — SEQdata.LTFU","text":"dataframe 4,139 rows 13 columns: ID Integer: Unique ID emulating individual patients time Integer: Time observation, always begins 0, max time 59; however, lost--followup, time truncated random point eligible Binary: eligibility criteria timepoints outcome Binary: outcome observed time point tx_init Binary: treatment observed time point sex Binary: Sex emulated patient N Numeric: Normal random variable N\\(10,5\\) L Numeric: 4% continuously increase U\\(0, 1\\) P Numeric: 2% continuously decrease U\\(9, 10\\) excusedOne Binary: one, always one variable emulating excuse treatment switch excusedZero Binary: zero, always zero variable emulating excuse treatment switch LTFU Binary: Flag losing simulated ID followup, 1 records ID afterwards","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated observational example data for SEQuential — SEQdata","title":"Simulated observational example data for SEQuential — SEQdata","text":"Simulated observational example data SEQuential","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated observational example data for SEQuential — SEQdata","text":"","code":"SEQdata"},{"path":"https://causalinference.github.io/SEQuential/reference/SEQdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated observational example data for SEQuential — SEQdata","text":"data frame 54,687 rows 13 columns: ID Integer: Unique ID emulating individual patients time Integer: Time observation, always begins 0, max time 59. continuous eligible Binary: eligibility criteria timepoints outcome Binary: outcome observed time point tx_init Binary: treatment observed time point sex Binary: Sex emulated patient N Numeric: Normal random variable N\\(10,5\\) L Numeric: 4% continuously increase U\\(0, 1\\) P Numeric: 2% continuously decrease U\\(9, 10\\) excusedOne Binary: one, always one variable emulating excuse treatment switch excusedZero Binary: zero, always zero variable emulating excuse treatment switch","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQdata.multitreatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated multitreatment example data for SEQuential multinomial models — SEQdata.multitreatment","title":"Simulated multitreatment example data for SEQuential multinomial models — SEQdata.multitreatment","text":"Simulated multitreatment example data SEQuential multinomial models","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQdata.multitreatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated multitreatment example data for SEQuential multinomial models — SEQdata.multitreatment","text":"","code":"SEQdata.multitreatment"},{"path":"https://causalinference.github.io/SEQuential/reference/SEQdata.multitreatment.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated multitreatment example data for SEQuential multinomial models — SEQdata.multitreatment","text":"dataframe 5,976 rows 11 columns: ID Integer: Unique ID emulating individual patients time Integer: Time observation, always begins 0, max time 59; however, lost--followup, time truncated random point eligible Binary: eligibility criteria timepoints outcome Binary: outcome observed time point tx_init Integer: treatment observed time point sex Binary: Sex emulated patient N Numeric: Normal random variable N\\(10,5\\) L Numeric: 4% continuously increase U\\(0, 1\\) P Numeric: 2% continuously decrease U\\(9, 10\\) excusedOne Binary: one, always one variable emulating excuse treatment switch excusedZero Binary: zero, always zero variable emulating excuse treatment switch","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQestimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the (very rough) time to run SEQuential analysis on current machine — SEQestimate","title":"Estimate the (very rough) time to run SEQuential analysis on current machine — SEQestimate","text":"Estimate (rough) time run SEQuential analysis current machine","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQestimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the (very rough) time to run SEQuential analysis on current machine — SEQestimate","text":"","code":"SEQestimate(   data,   id.col,   time.col,   eligible.col,   treatment.col,   outcome.col,   time_varying.cols = list(),   fixed.cols = list(),   method,   options )"},{"path":"https://causalinference.github.io/SEQuential/reference/SEQestimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the (very rough) time to run SEQuential analysis on current machine — SEQestimate","text":"data data.frame data.table, already expanded SEQexpand, preform expansion according arguments passed either params ... id.col String: column name id column time.col String: column name time column eligible.col String: column name eligibility column treatment.col String: column name treatment column outcome.col String: column name outcome column time_varying.cols List: column names time varying columns fixed.cols List: column names fixed columns method String: method analysis preform options List: optional list parameters SEQopts","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQexpand.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an expanded dataset for use with SEQuential — SEQexpand","title":"Creates an expanded dataset for use with SEQuential — SEQexpand","text":"Creates expanded dataset use SEQuential","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQexpand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an expanded dataset for use with SEQuential — SEQexpand","text":"","code":"SEQexpand(params)"},{"path":"https://causalinference.github.io/SEQuential/reference/SEQexpand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an expanded dataset for use with SEQuential — SEQexpand","text":"params SEQparams object built SEQuential function","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQopts-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class of user options to feed into the SEQuential processes and estimates This class should match SEQopts in file SEQopts.R — SEQopts-class","title":"An S4 class of user options to feed into the SEQuential processes and estimates This class should match SEQopts in file SEQopts.R — SEQopts-class","text":"S4 class user options feed SEQuential processes estimates class match SEQopts file SEQopts.R","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQopts.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Builder for SEQuential Model and Estimates — SEQopts","title":"Parameter Builder for SEQuential Model and Estimates — SEQopts","text":"Parameter Builder SEQuential Model Estimates","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQopts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Builder for SEQuential Model and Estimates — SEQopts","text":"","code":"SEQopts(   bootstrap = FALSE,   bootstrap.nboot = 100,   bootstrap.sample = 0.8,   cense = NA,   cense.denominator = NA,   cense.eligible = NA,   cense.numerator = NA,   compevent = NA,   covariates = NA,   data.return = FALSE,   denominator = NA,   excused = FALSE,   excused.cols = c(NA, NA),   fastglm.method = 2L,   followup.class = FALSE,   followup.include = TRUE,   followup.max = Inf,   followup.min = -Inf,   followup.spline = FALSE,   hazard = FALSE,   indicator.baseline = \"_bas\",   indicator.squared = \"_sq\",   km.curves = FALSE,   multinomial = FALSE,   ncores = parallel::detectCores() - 1,   nthreads = data.table::getDTthreads(),   numerator = NA,   parallel = FALSE,   plot.colors = c(\"#F8766D\", \"#00BFC4\", \"#555555\"),   plot.labels = NA,   plot.subtitle = NA,   plot.title = NA,   plot.type = \"survival\",   seed = 1636,   selection.first_trial = FALSE,   selection.prob = 0.8,   selection.random = FALSE,   subgroup = NA,   survival.max = Inf,   treat.level = c(0, 1),   trial.include = TRUE,   weight.eligible_cols = c(),   weight.lower = -Inf,   weight.lag_condition = TRUE,   weight.p99 = FALSE,   weight.preexpansion = TRUE,   weight.upper = Inf,   weighted = FALSE )"},{"path":"https://causalinference.github.io/SEQuential/reference/SEQopts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Builder for SEQuential Model and Estimates — SEQopts","text":"bootstrap Logical: defines SEQuential run bootstrapping, default FALSE bootstrap.nboot Integer: number bootstraps bootstrap.sample Numeric: percentage data use bootstrapping, [0, 1], default 0.8 cense String: column name additional censoring variable, e.g. loss--follow-cense.denominator String: censoring denominator covariates right hand side formula object cense.eligible String: column name indicator column defining rows use censoring model cense.numerator String: censoring numerator covariates right hand side formula object compevent String: column name competing event indicator covariates String: covariates right hand side formula object data.return Logical: whether return expanded dataframe weighting information denominator String: denominator covariates right hand side  formula object excused Logical: case censoring, whether excused condition excused.cols List: list column names treatment switch excuses - length, ordered treat.level fastglm.method Integer: decomposition method fastglm (1-QR, 2-Cholesky, 3-LDLT, 4-QR.FPIV) followup.class Logical: treat followup class, e.g. expands every time indicator column followup.include Logical: whether include 'followup' 'followup_squared' outcome model followup.max Numeric: maximum time expand , default Inf (maximum) followup.min Numeric: minimum time expand aboud, default -Inf (minimum) followup.spline Logical: treat followup cubic spline hazard Logical: hazard error calculation instead survival estimation indicator.baseline String: identifier baseline variables covariates, numerator, denominator - intended override indicator.squared String: identifier squared variables covariates, numerator, denominator - intended override km.curves Logical: Kaplan-Meier survival curve creation data return multinomial Logical: ncores Integer: number cores use parallel processing, default one less system max nthreads Integer: number threads use data.table processing numerator String: numerator covariates right hand side  formula object parallel Logical: define SEQuential process run parallel, default FALSE plot.colors Character: Colors output plot km.curves = TRUE, defaulted ggplot2 defaults plot.labels Character: Color labels output plot km.curves = TRUE order e.g. c(\"risk.0\", \"risk.1\") plot.subtitle Character: Subtitle output plot km.curves = TRUE plot.title Character: Title output plot km.curves = TRUE plot.type Character: Type plot create km.curves = TRUE, available options 'survival', 'risk', 'inc' (case censoring) seed Integer: starting seed selection.first_trial Logical: selects first eligible trial expanded dataset selection.prob Numeric: percent total IDs select selection.random, bound [0, 1] selection.random Logical: randomly selects IDs replacement run analysis subgroup Character: Column name stratify outcome models survival.max Numeric: maximum time survival curves, default Inf (maximum) treat.level List: treatment levels compare trial.include Logical: whether include 'trial' 'trial_squared' outcome model weight.eligible_cols List: list column names indicator columns defining weights eligible weight models - order treat.level weight.lower Numeric: weights truncated lower end weight weight.lag_condition Logical: whether weights conditioned treatment lag value weight.p99 Logical: forces weight truncation 1st 99th percentile weights, override provided weight.upper weight.lower weight.preexpansion Logical: whether weighting done pre-expanded data weight.upper Numeric: weights truncated upper end weight weighted Logical: whether preform weighted analysis, default FALSE","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQopts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Builder for SEQuential Model and Estimates — SEQopts","text":"object class 'SEQopts'","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQoutput-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class used to hold the outputs for the SEQuential process — SEQoutput-class","title":"An S4 class used to hold the outputs for the SEQuential process — SEQoutput-class","text":"S4 class used hold outputs SEQuential process","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQoutput-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class used to hold the outputs for the SEQuential process — SEQoutput-class","text":"params SEQparams object outcome outcome covariates numerator numerator covariates denominator denominator covariates outcome.model list length bootstrap.nboot containing outcome coefficients hazard hazard ratio survival.curve ggplot object survival curves survival.data data.table survival data risk.difference risk difference calculated survival data risk.ratio risk ratio calculated survival data time time minutes used SEQuential process weight.statistics information weighting process, containing weight coefficients weight statistics info list outcome switch information (applicable) ce.model list competing event models compevent specified, NA otherwise","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQparams-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An internal S4 class to carry around parameters during the SEQuential process - inherits user facing parameters from SEQopts — SEQparams-class","title":"An internal S4 class to carry around parameters during the SEQuential process - inherits user facing parameters from SEQopts — SEQparams-class","text":"internal S4 class carry around parameters SEQuential process - inherits user facing parameters SEQopts","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQparams-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An internal S4 class to carry around parameters during the SEQuential process - inherits user facing parameters from SEQopts — SEQparams-class","text":"data pre expansion data DT post expansion data id id column defined user time time column defined user eligible eligible column defined user treatment treatment column defined user time_varying list time varying columns defined user fixed list fixed columns defined user method method analysis defined user","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQuential.html","id":null,"dir":"Reference","previous_headings":"","what":"SEQuential trial emulation — SEQuential","title":"SEQuential trial emulation — SEQuential","text":"`SEQuential` --one API SEQuential analysis, returning SEQoutput object results. specific examples can found wiki https://github.com/CausalInference/SEQuential/wiki","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQuential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEQuential trial emulation — SEQuential","text":"","code":"SEQuential(   data,   id.col,   time.col,   eligible.col,   treatment.col,   outcome.col,   time_varying.cols = list(),   fixed.cols = list(),   method,   options )"},{"path":"https://causalinference.github.io/SEQuential/reference/SEQuential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEQuential trial emulation — SEQuential","text":"data data.frame data.table, already expanded SEQexpand, preform expansion according arguments passed either params ... id.col String: column name id column time.col String: column name time column eligible.col String: column name eligibility column treatment.col String: column name treatment column outcome.col String: column name outcome column time_varying.cols List: column names time varying columns fixed.cols List: column names fixed columns method String: method analysis preform options List: optional list parameters SEQopts","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQuential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEQuential trial emulation — SEQuential","text":"S4 object class SEQoutput","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQuential.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SEQuential trial emulation — SEQuential","text":"Implemention sequential trial emulation analysis observational databases. SEQuential software accommodates time-varying treatments confounders, well binary failure time outcomes. SEQ allows compare static dynamic strategies, can used estimate observational analogs intention--treat per-protocol effects, can adjust potential selection bias induced losses--follow-.","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQuential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEQuential trial emulation — SEQuential","text":"","code":"if (FALSE) { # \\dontrun{ data <- SEQdata model <- SEQuential(data, id.col = \"ID\",                            time.col = \"time\",                            eligible.col = \"eligible\",                           treatment.col = \"tx_init\",                           outcome.col = \"outcome\",                           time_varying.cols = c(\"N\", \"L\", \"P\"),                           fixed.cols = \"sex\",                           method = \"ITT\",                            options = SEQopts()) } # }"},{"path":"https://causalinference.github.io/SEQuential/reference/SEQweights-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An internal S4 class to help transfer weight statistics out of internal_weights — SEQweights-class","title":"An internal S4 class to help transfer weight statistics out of internal_weights — SEQweights-class","text":"internal S4 class help transfer weight statistics internal_weights","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/SEQweights-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An internal S4 class to help transfer weight statistics out of internal_weights — SEQweights-class","text":"weights data.table containing estimated weights, either pre post expansion coef.n0 numerator zero model coef.n1 numerator one model coef.d0 denominator zero model coef.d1 denominator one model coef.ncense numerator censoring model coef.dcense denominator censoring model","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/assign.global.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function loading ncores in global environment — assign.global","title":"Internal function loading ncores in global environment — assign.global","text":"Internal function loading ncores global environment","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/assign.global.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function loading ncores in global environment — assign.global","text":"","code":"assign.global(ncores, pos = 1)"},{"path":"https://causalinference.github.io/SEQuential/reference/assign.global.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function loading ncores in global environment — assign.global","text":"ncores ncores assign global pos defaults 1 equals assignment global environment","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/clean_fastglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to clean out non needed elements from fastglm return — clean_fastglm","title":"Function to clean out non needed elements from fastglm return — clean_fastglm","text":"Function clean non needed elements fastglm return","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/clean_fastglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to clean out non needed elements from fastglm return — clean_fastglm","text":"","code":"clean_fastglm(model)"},{"path":"https://causalinference.github.io/SEQuential/reference/clean_fastglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to clean out non needed elements from fastglm return — clean_fastglm","text":"model fastglm model","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/compevent.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to return competing event models from a SEQuential object — compevent","title":"Function to return competing event models from a SEQuential object — compevent","text":"Function return competing event models SEQuential object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/compevent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to return competing event models from a SEQuential object — compevent","text":"","code":"compevent(object)"},{"path":"https://causalinference.github.io/SEQuential/reference/compevent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to return competing event models from a SEQuential object — compevent","text":"object SEQoutput object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/compevent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to return competing event models from a SEQuential object — compevent","text":"list fastglm objects","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves Outcome, Numerator, and Denominator Covariates — covariates","title":"Retrieves Outcome, Numerator, and Denominator Covariates — covariates","text":"Retrieves Outcome, Numerator, Denominator Covariates","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves Outcome, Numerator, and Denominator Covariates — covariates","text":"","code":"covariates(object)"},{"path":"https://causalinference.github.io/SEQuential/reference/covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves Outcome, Numerator, and Denominator Covariates — covariates","text":"object object class SEQoutput","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves Outcome, Numerator, and Denominator Covariates — covariates","text":"list SEQuential covariates","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/create.default.LTFU.covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Function to create 'default' loss-to-followup formula — create.default.LTFU.covariates","title":"Internal Function to create 'default' loss-to-followup formula — create.default.LTFU.covariates","text":"Internal Function create 'default' loss--followup formula","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/create.default.LTFU.covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Function to create 'default' loss-to-followup formula — create.default.LTFU.covariates","text":"","code":"create.default.LTFU.covariates(params, type)"},{"path":"https://causalinference.github.io/SEQuential/reference/create.default.covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Function to create 'default' formula — create.default.covariates","title":"Internal Function to create 'default' formula — create.default.covariates","text":"Internal Function create 'default' formula","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/create.default.covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Function to create 'default' formula — create.default.covariates","text":"","code":"create.default.covariates(params)"},{"path":"https://causalinference.github.io/SEQuential/reference/create.default.weight.covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Function to create 'default' weighting formula — create.default.weight.covariates","title":"Internal Function to create 'default' weighting formula — create.default.weight.covariates","text":"Internal Function create 'default' weighting formula","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/create.default.weight.covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Function to create 'default' weighting formula — create.default.weight.covariates","text":"","code":"create.default.weight.covariates(params, type)"},{"path":"https://causalinference.github.io/SEQuential/reference/create.risk.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to pull Risk Ratio and Risk Difference from data when km.curves = TRUE — create.risk","title":"Internal function to pull Risk Ratio and Risk Difference from data when km.curves = TRUE — create.risk","text":"Internal function pull Risk Ratio Risk Difference data km.curves = TRUE","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/create.risk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to pull Risk Ratio and Risk Difference from data when km.curves = TRUE — create.risk","text":"","code":"create.risk(data, params)"},{"path":"https://causalinference.github.io/SEQuential/reference/denominator.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves Denominator Models from SEQuential object — denominator","title":"Retrieves Denominator Models from SEQuential object — denominator","text":"Retrieves Denominator Models SEQuential object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/denominator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves Denominator Models from SEQuential object — denominator","text":"","code":"denominator(object)"},{"path":"https://causalinference.github.io/SEQuential/reference/denominator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves Denominator Models from SEQuential object — denominator","text":"object object class SEQoutput","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/denominator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves Denominator Models from SEQuential object — denominator","text":"List numerator models","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to return diagnostic tables from a SEQuential object — diagnostics","title":"Function to return diagnostic tables from a SEQuential object — diagnostics","text":"Function return diagnostic tables SEQuential object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to return diagnostic tables from a SEQuential object — diagnostics","text":"","code":"diagnostics(object)"},{"path":"https://causalinference.github.io/SEQuential/reference/diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to return diagnostic tables from a SEQuential object — diagnostics","text":"object SEQoutput object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/diagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to return diagnostic tables from a SEQuential object — diagnostics","text":"list diagnostic tables","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/format.time.html","id":null,"dir":"Reference","previous_headings":"","what":"Nicely cleans time for readability — format.time","title":"Nicely cleans time for readability — format.time","text":"Nicely cleans time readability","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/format.time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nicely cleans time for readability — format.time","text":"","code":"# S3 method for class 'time' format(seconds)"},{"path":"https://causalinference.github.io/SEQuential/reference/hazard.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to return hazard ratios from a SEQuential object — hazard","title":"Function to return hazard ratios from a SEQuential object — hazard","text":"Function return hazard ratios SEQuential object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/hazard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to return hazard ratios from a SEQuential object — hazard","text":"","code":"hazard(object)"},{"path":"https://causalinference.github.io/SEQuential/reference/hazard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to return hazard ratios from a SEQuential object — hazard","text":"object SEQoutput object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/hazard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to return hazard ratios from a SEQuential object — hazard","text":"list hazard ratios","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/inline.pred.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function to inline predict a fastglm object — inline.pred","title":"Helper Function to inline predict a fastglm object — inline.pred","text":"Helper Function inline predict fastglm object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/inline.pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function to inline predict a fastglm object — inline.pred","text":"","code":"inline.pred(   model,   newdata,   params,   type,   case = \"default\",   multi = FALSE,   target = NULL )"},{"path":"https://causalinference.github.io/SEQuential/reference/inline.pred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function to inline predict a fastglm object — inline.pred","text":"model fastglm object newdata filler .SD data.table params parameter SEQuential type type prediction","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/internal.analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal analysis tool for handling parallelization/bootstrapping on multiple OS types — internal.analysis","title":"Internal analysis tool for handling parallelization/bootstrapping on multiple OS types — internal.analysis","text":"Internal analysis tool handling parallelization/bootstrapping multiple OS types","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/internal.analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal analysis tool for handling parallelization/bootstrapping on multiple OS types — internal.analysis","text":"","code":"internal.analysis(params)"},{"path":"https://causalinference.github.io/SEQuential/reference/internal.hazard.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to format a dataset for hazard ratio calculation — internal.hazard","title":"Generic function to format a dataset for hazard ratio calculation — internal.hazard","text":"Generic function format dataset hazard ratio calculation","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/internal.hazard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to format a dataset for hazard ratio calculation — internal.hazard","text":"","code":"internal.hazard(model, params)"},{"path":"https://causalinference.github.io/SEQuential/reference/internal.model.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for fitting outcome models — internal.model","title":"Internal function for fitting outcome models — internal.model","text":"Internal function fitting outcome models","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/internal.model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for fitting outcome models — internal.model","text":"","code":"internal.model(data, params)"},{"path":"https://causalinference.github.io/SEQuential/reference/internal.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting for survival curves — internal.plot","title":"Plotting for survival curves — internal.plot","text":"Plotting survival curves","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/internal.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting for survival curves — internal.plot","text":"","code":"internal.plot(survival.data, params)"},{"path":"https://causalinference.github.io/SEQuential/reference/internal.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting for survival curves — internal.plot","text":"survival.data Dataframe containing survival information params Params passed around SEQuential","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/internal.survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for creating survival curves — internal.survival","title":"Internal function for creating survival curves — internal.survival","text":"Internal function creating survival curves","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/internal.survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for creating survival curves — internal.survival","text":"","code":"internal.survival(params, outcome)"},{"path":"https://causalinference.github.io/SEQuential/reference/internal.weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for defining weights — internal.weights","title":"Internal function for defining weights — internal.weights","text":"Internal function defining weights","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/internal.weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for defining weights — internal.weights","text":"","code":"internal.weights(DT, data, params)"},{"path":"https://causalinference.github.io/SEQuential/reference/internal.weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for defining weights — internal.weights","text":"DT data.table expansion data data.table data expansion params object class SEQparams (defined SEQuential)","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/km.curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to print kaplan-meier curves — km.curve","title":"Function to print kaplan-meier curves — km.curve","text":"Function print kaplan-meier curves","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/km.curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to print kaplan-meier curves — km.curve","text":"","code":"km.curve(   object,   plot.type = \"survival\",   plot.title,   plot.subtitle,   plot.labels,   plot.colors )"},{"path":"https://causalinference.github.io/SEQuential/reference/km.curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to print kaplan-meier curves — km.curve","text":"object SEQoutput object plot plot.type character: type plot print plot.title character: defines title plot plot.subtitle character: plot subtitle plot.labels length 2 character: plot labels plot.colors length 2 character: plot colors","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/km.curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to print kaplan-meier curves — km.curve","text":"ggplot object plot plot.type","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/km.data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to return survival data from a SEQuential object — km.data","title":"Function to return survival data from a SEQuential object — km.data","text":"Function return survival data SEQuential object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/km.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to return survival data from a SEQuential object — km.data","text":"","code":"km.data(object)"},{"path":"https://causalinference.github.io/SEQuential/reference/km.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to return survival data from a SEQuential object — km.data","text":"object SEQoutput object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/km.data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to return survival data from a SEQuential object — km.data","text":"list dataframes survival values","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for nested logistic — multinomial","title":"Helper function for nested logistic — multinomial","text":"Helper function nested logistic","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for nested logistic — multinomial","text":"","code":"multinomial(X, y, family = quasibinomial(), method)"},{"path":"https://causalinference.github.io/SEQuential/reference/multinomial.predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to predict from the nested logistic — multinomial.predict","title":"Helper to predict from the nested logistic — multinomial.predict","text":"Helper predict nested logistic","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/multinomial.predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to predict from the nested logistic — multinomial.predict","text":"","code":"multinomial.predict(model, X, target = NULL)"},{"path":"https://causalinference.github.io/SEQuential/reference/multinomial.summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get the summary table from multinomial — multinomial.summary","title":"Helper function to get the summary table from multinomial — multinomial.summary","text":"Helper function get summary table multinomial","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/multinomial.summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get the summary table from multinomial — multinomial.summary","text":"","code":"multinomial.summary(model)"},{"path":"https://causalinference.github.io/SEQuential/reference/numerator.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves Numerator Models from SEQuential object — numerator","title":"Retrieves Numerator Models from SEQuential object — numerator","text":"Retrieves Numerator Models SEQuential object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/numerator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves Numerator Models from SEQuential object — numerator","text":"","code":"numerator(object)"},{"path":"https://causalinference.github.io/SEQuential/reference/numerator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves Numerator Models from SEQuential object — numerator","text":"object object class SEQoutput","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/numerator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves Numerator Models from SEQuential object — numerator","text":"List numerator models","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves Outcome Models from SEQuential object — outcome","title":"Retrieves Outcome Models from SEQuential object — outcome","text":"Retrieves Outcome Models SEQuential object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/outcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves Outcome Models from SEQuential object — outcome","text":"","code":"outcome(object)"},{"path":"https://causalinference.github.io/SEQuential/reference/outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves Outcome Models from SEQuential object — outcome","text":"object object class SEQoutput","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/outcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves Outcome Models from SEQuential object — outcome","text":"List outcome models","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/parameter.setter.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Helper — parameter.setter","title":"Parameter Helper — parameter.setter","text":"Parameter Helper","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/parameter.setter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Helper — parameter.setter","text":"","code":"parameter.setter(   data,   DT,   id.col,   time.col,   eligible.col,   outcome.col,   treatment.col,   time_varying.cols,   fixed.cols,   method,   opts )"},{"path":"https://causalinference.github.io/SEQuential/reference/parameter.simplifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplifies parameters down for later use — parameter.simplifier","title":"Simplifies parameters down for later use — parameter.simplifier","text":"Simplifies parameters later use","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/parameter.simplifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplifies parameters down for later use — parameter.simplifier","text":"","code":"parameter.simplifier(params)"},{"path":"https://causalinference.github.io/SEQuential/reference/prepare.data.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to prepare data for fastglm — prepare.data","title":"Helper function to prepare data for fastglm — prepare.data","text":"Helper function prepare data fastglm","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/prepare.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to prepare data for fastglm — prepare.data","text":"","code":"prepare.data(weight, params, type, model, case)"},{"path":"https://causalinference.github.io/SEQuential/reference/prepare.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to prepare data for fastglm — prepare.data","text":"weight data undergoing preparation params parameter SEQuential type type model, e.g. d0 = \"denominator\" model model number, e.g. d0 = \"zero model\"","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/prepare.output.html","id":null,"dir":"Reference","previous_headings":"","what":"Output constructor — prepare.output","title":"Output constructor — prepare.output","text":"Output constructor","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/prepare.output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output constructor — prepare.output","text":"","code":"prepare.output(   params,   WDT,   outcome,   weights,   hazard,   survival.plot,   survival.data,   survival.ce,   risk,   runtime,   info )"},{"path":"https://causalinference.github.io/SEQuential/reference/risk.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to return risk information from a SEQuential object — risk","title":"Function to return risk information from a SEQuential object — risk","text":"Function return risk information SEQuential object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/risk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to return risk information from a SEQuential object — risk","text":"","code":"risk(object)"},{"path":"https://causalinference.github.io/SEQuential/reference/risk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to return risk information from a SEQuential object — risk","text":"object SEQoutput object","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/risk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to return risk information from a SEQuential object — risk","text":"dataframe Risk information (risk ratios, risk differences confidence intervals, bootstrapped)","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/show-SEQoutput-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for S4 object - SEQoutput. — show,SEQoutput-method","title":"Show method for S4 object - SEQoutput. — show,SEQoutput-method","text":"Show method S4 object - SEQoutput.","code":""},{"path":"https://causalinference.github.io/SEQuential/reference/show-SEQoutput-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for S4 object - SEQoutput. — show,SEQoutput-method","text":"","code":"# S4 method for class 'SEQoutput' show(object)"},{"path":"https://causalinference.github.io/SEQuential/reference/show-SEQoutput-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for S4 object - SEQoutput. — show,SEQoutput-method","text":"object SEQoutput object - usually generated SEQuential","code":""}]
